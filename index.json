[{"content":"ইদানীং একটা প্রশ্ন প্রায়ই আসে… কিভাবে জব নিয়ে বিদেশে যাওয়া যায়?\nআমি সম্প্রতি একটা চাকরী নিয়ে জার্মানিতে আসি। ট্রিভাগো নামে একটা কোম্পানিতে সফটওয়্যার ইঞ্জিনিয়ার হিসেবে জয়েন করেছি। গত কয়েক মাসে পরিচিত অনেকেই বাংলাদেশ থেকে জব নিয়ে বিদেশে গিয়েছেন। আগের অফিসের কয়েকজন পরিচিতি কলিগ জার্মানি এসেছেন। কিছুদিন আগে আরেক বন্ধু নেদারল্যান্ড আসল। এক বড় ভাই জাপান যাচ্ছেন। আরেক বড় ভাই পরিবার নিয়ে সাউথ কোরিয়াতে গেল কয়দিন আগে। ইদানীং চাকরী নিয়ে বিদেশ যাওয়ার একটা ট্রেন্ড দেখা যাচ্ছে দেশে। আমি জার্মানি আসার পর পরিচিত অনেকেই জানতে চেয়েছেন কিভাবে জব নিয়ে বিদেশে আসা যায়। ফেসবুকে অনেক প্রশ্ন পেয়েছি এ ব্যাপারে। সবাইকে একই প্রশ্নের উত্তর বার বার দেয়া সময় সাপেক্ষ। তাই ভাবলাম, একটা ব্লগ/ভ্লগ করি, যেখানে কমন সব প্রশ্নের উত্তর আর আমার অভিজ্ঞতা শেয়ার করা যাবে।\nকেন বিদেশ যাবেন? সব কিছুর আগে নিজের ভেতরে একটা প্রশ্ন আসা উচিৎ, সেটা হচ্ছে \u0026ldquo;দেশ ছেড়ে কেন বিদেশে যাব?\u0026quot;\nকেন দেশ ছেড়ে বিদেশে যাবেন এইটা খুবই ব্যক্তিগত। কেন আপনি বিদেশ যাওয়ার চিন্তা করছেন এইটা শুধুমাত্র আপনিই ভাল জানেন। তবে দেশ ছেড়ে বিদেশে যাওয়া অনেক কঠিন একটা সিদ্ধান্ত, বিশেষ করে যদি আপনার কোনরকম পিছুটান থাকে। বাবা-মা, পরিবার, আত্মীয়-স্বজন, বন্ধু বান্ধব সবাইকে ছেড়ে একদম নতুন পরিবেশে এসে থাকা, জীবন-যাপন করা একদম সহজ ব্যাপার না। সাথে যদি আপনার উপর পরিবারের কোন দায়িত্ব থাকে সেইদিক চিন্তা করলে আরো অনেক কষ্টকর হয়ে যায়।\nতবে দেশ ছেড়ে একদম অন্য পরিবেশে এসে থাকা এক রকমের অ্যাডভেঞ্চারও বটে! আপনি এমন অনেক অনেক কিছু দেখবেন, অনেক কিছু সম্পর্কে জানবেন যা নিজের এলাকায় বসে কাটিয়ে দিলে হয়ত কখনোই দেখতেন না, অথবা জানতেন না। পৃথিবীর অনেক অনেক আকর্ষণীয় ব্যাপারই হয়ত আপনার অজানা থেকে যেত। যদিও ইন্টারনেটের যুগে এখন অনেক কিছুই সহজ, অনেক তথ্য নিমিষেই পাওয়া যায়। কিন্তু বাস্তব জীবনে দেখা বা অভিজ্ঞতা করার ব্যপারটাই পুরো ভিন্ন। এই একটা কারণে আমি মুভি/সিনেমা খুব বেশী একটা না দেখে গেম খেলি বেশী। গেমের ভিতরে যেই গল্পটা থাকে তা নিজের মত করে উপভোগ করা যায়, যেহেতু প্লেয়ারের কন্ট্রোল আমার হাতে। চাইলেই গল্পের একদম ভিতরে চলে যাওয়া যায়। যাই হোক, এইটা সম্পূর্ণ নিজের অভিমত। কোন রকমের মোটিভেশন না। ক্ষণস্থায়ী জীবনে উপভোগ করার মত অনেক কিছুই আসবে, কিন্তু সেই রকমের সময় পাওয়া যাবে না। তাই কিছু ব্যাপার ত্যাগ করতেই হবে। আস্তে আস্তে ধরতে হবে শুধুমাত্র সেই সব ব্যাপারগুলো যেটা আমার নিজের জন্য ভাল, অথবা নিজের বেশী ভাল লাগে। নিজের সময়টা যাতে সবচেয়ে ভালভাবে উপভোগ করা যায় সেদিকেই মনোযোগ দেয়া উচিৎ।\nবিদেশ যাওয়া সহজ নাকি কঠিন? আমি সফটওয়্যার ইঞ্জিনিয়ারিং চাকরী নিয়ে বিদেশে এসেছি। আমাদের ব্যাকগ্রাউন্ডে যারা আছেন যেমন সফটওয়্যার ইঞ্জিনিয়ার, কোয়ালিটি অ্যাস্যুরেন্স/টেস্ট ইঞ্জিনিয়ার, টেকনিক্যাল প্রোডাক্ট ম্যানেজার, তাদের জন্য এখন ব্যাপারটা আগের চেয়ে অনেক সহজ। আপনার ভাল প্রোফাইল অথবা অভিজ্ঞতা থাকলে দেশের বাহিরের কোম্পানিগুলো তে চাকরী পাওয়া খুবই সহজ। সাথে বিভিন্ন কোম্পানি ইদানীং রিলোকেশন প্যাকেজ অফার করে। দেশ থেকে আসার সময় যাবতীয় অনেক খরচ (ভিসা প্রসেসিং ফী, ফ্লাইট টিকেট, আসবাবপত্র স্থানান্তর ফী, বিদেশে রেসিডেন্ট পারমিট ফী, ইত্যাদি) আপনার কোম্পানি বহন করবে এমন অফার পাওয়া যায়।\nকোন দেশ/শহরে যাব? দেশ/শহর নির্বাচন খুবই গুরুত্বপূর্ণ একটা ব্যাপার। কিছু পরিচিত মানুষ আছেন, তারা অনেকে বলেছেন, বাহিরে যে কোন একটা দেশে যেতে পারলেই হল। ব্যাপারটা কিন্তু এত হেলা ফেলায় দেখলে হবে না। আপনি হয়ত বলতে পারেন, বিদেশ মানেই দেশ থেকে ভাল, এটা সব সময় সত্যি নাও হতে পারে। কোথায় গেলে ভাল হবে সেটা আপনাকে কেউ বলে দিতে পারবে না। এই জন্য আপনার নিজের রিসার্চ করতে হবে। এই যেমন আমি এখন জার্মানির ডুসেলডর্ফ শহরে থাকি। আমি যদি আমার এই এলাকার অভিজ্ঞতা শেয়ার করি সেটা কিন্তু পুরো জার্মানিকে তুলে ধরে না। আমার কয়েকজন বন্ধু জার্মানির বার্লিন, কোলন, স্টুটগার্ট শহরে থাকে। তাদের সাথে আলাপ করতে গেলে দেখা যায় বার্লিন, স্টুটগার্ট আর ডুসেলডর্ফের মধ্যে অনেক পার্থক্য আছে। কাজেই একটা শহরে থাকা মানেই কিন্তু পুরো দেশের অভিজ্ঞতা নিয়ে নিলাম এমন কিন্তু না। আপনার কোথায় গেলে ভাল হবে, কোথায় আপনার ভাল লাগবে সেটা আপনাকেই খুঁজে বের করতে হবে। কোন এলাকার সংস্কৃতি কেমন, আপনার ব্যক্তিত্ব, পছন্দ এসব কিছুর সাথে মানিয়ে নিতে পারবেন কিনা সেটা দেখতে হবে। কারণ আপনি যেই চাকরীর জন্য যাচ্ছেন সেটা আপনি করবেন দিনে ৬-৮ ঘণ্টা। ২৪ ঘণ্টার মধ্যে বাকী পুরোটা সময়, সাথে উইকেন্ডও কাজের বাহিরেই কাটাতে হবে।\nজীবনের \u0026ldquo;core values\u0026rdquo; আপনার জীবনের \u0026ldquo;core value\u0026rdquo; বা \u0026ldquo;মুল অর্থ\u0026rdquo; যা আছে, তা ঠিকঠাক ভাবে বজায় রাখতে পারবেন কিনা। এটা খুবই খুবই গুরুত্বপূর্ণ। সময়ের সাথে অবশ্যই জীবনে পরিবর্তন আসবে। কিন্তু না জেনে এমন এক জায়গায় যাওয়ার কারণে আপনার জীবনের যেই অর্থ সেটা যদি আর নাই থাকে তাহলে কিন্তু জীবনটা আর উপভোগ করা গেল না। পরিবারের ভবিষ্যতের কথা চিন্তা করে আমার দেশের বাহিরে যাওয়ার সিদ্ধান্ত নিতে হয়েছে। যখন দেশের বাহিরে যাওয়ার সিদ্ধান্ত নেই, তখন কিছু বন্ধু-বান্ধব ও আত্মীয়-স্বজন বলছিল আমেরিকা অথবা কানাডা যেতে, তাহলে অনেক পয়সা কামানো যাবে।\nআমার জীবনের \u0026ldquo;core values\u0026rdquo; চিন্তা করলে পয়সা কামানো অবশ্যই একটা বড় ফ্যাক্টর। কিন্তু অনেক পয়সা কামিয়ে তাড়াতাড়ি ধনী হয়ে যাব, গাড়ি-বাড়ি করব এইটা আমার লক্ষ্য না। আমি জীবনটাকে উপভোগ করতে চাই। সেই সাথে আমার পরিবারকেও ভালভাবে সাপোর্ট দিতে চাই। যখন একটু রিসার্চ করলাম, তখন দেখলাম ইউরোপে অধিকাংশে \u0026ldquo;employment law\u0026rdquo; অনেক কঠিন। সময়মত অফিস শেষ হবে, নির্ধারিত সময়ের অতিরিক্ত কাজ করতে হবে না। তাই অফিস শেষে ভাল পরিমাণের ব্যক্তিগত সময় পাওয়া যায়। আরো দেখলাম ব্লু-কার্ড থাকলে ইউরোপিয়ান ইউনিয়ন এর সব কয়টা দেশে বিনা ভিসায় ঘুরতে যাওয়া যাবে। ঘুরাঘুরি ভাল লাগে বলে এই পয়েন্টটা আমার অনেক আকর্ষণীয় মনে হয়েছে। কিন্তু এখানে ট্যাক্সের পরিমাণ অনেক বেশী। বেতনের প্রায় অর্ধেক চলে যাবে ট্যাক্স দিয়েই। তারপরে বাসা ভাড়া, বিল, খাওয়া-দাওয়া, ও অন্যান্য খরচ হিসাব করলে খুব কম পরিমাণ পয়সা বাকি থাকে। যেইটা জমিয়ে খুব তাড়াতাড়ি ধনী হওয়া সম্ভব না। কিন্তু এইটা আমার জন্য গুরুত্বপূর্ণ না। কারণ তাতেই আমি আমার পরিবারকে ভালমত সাপোর্ট দিতে পারব। তাই সব মিলিয়ে আমার ইউরোপ পছন্দ হয়েছে। আমি যখন বাহিরের চাকরী খোঁজা শুরু করি তখন জার্মানির সফটওয়্যার ইন্ডাস্ট্রির অবস্থা ভাল ছিল। অনেক চাকরী ছিল, এখনো আছে। তবে এই অবস্থার পরিবর্তন হতে পারে সময়ের সাথে।\nবর্ণবাদ ও ধর্মীয় অনুভূতি এছাড়াও বর্ণবাদ, ধর্মীয় অনুভূতির ব্যাপার আছে। এইগুলো চিন্তা করাও গুরুত্বপূর্ণ। আমাদের দেশে সবার গায়ের রং কাছাকাছি, তাই বর্ণবাদ ব্যাপারটা হয়ত আমরা খুব ভালভাবে বুঝি না। মুসলিম প্রধান দেশে থাকি বলে যারা মুসলমান আছি, তাদের একটা বড় অংশ ধর্মীয় অনুভূতির ব্যাপারটাও হয়ত খুব ভাল বুঝতে পারি না। ভিন্ন ধর্মের মানুষ যারা আছে, তারা প্রায়ই হীনমন্যতায় ভুগে অন্যদের অনেক কঠিন ও ব্যাথাদায়ক কথার কারণে। যেটা সবাই অনুধাবন করতে পারে না। আমরাও ছোট থাকতে মাঝে মাঝে ভিন্ন ধর্মী মানুষের অনেক কটাক্ষ করে কথা বলতাম, শুধু নিজে মজা পাওয়ার জন্য। কখনো বুঝার চেষ্টা করতাম না তাদের কেমন লাগে। আপনি যেই এলাকায় যেতে চাচ্ছেন ওই এলাকায় যদি আপনি সংখ্যালঘু হন এবং এইরকম বর্ণবাদের শিকার হন, অথবা আপনার ধর্মকে কেউ কটাক্ষ করে কথা বলে সেটা মেনে নিতে পারবেন? নাকি এমন কোন এলাকা খুঁজবেন যেখানে আপনি আপনার মত ধর্ম পালন করতে পারবেন কোন সমস্যা ছাড়াই।\nশেষ কথা আপনার জীবনের \u0026ldquo;core values\u0026rdquo; কি কি সেটা ভালভাবে বসে একবার চিন্তা করুন। তারপর সম মিলিয়ে একটু ঘাটাঘাটি করুন আপনার জন্য বাংলাদেশের বাহিরে পৃথিবীর কোন এলাকাটা সবচেয়ে উপযোগী? কারণ আপনি যখন কাজের মধ্যে থাকবেন তখন হয়ত সব ব্যাপারগুলো অনুধাবন করবেন না। কিন্তু কাজের বাহিরেও যে আলাদা একটা ব্যক্তিগত জীবন আছে সেইটা আমরা প্রায়ই ভুলে যাই মাঝে মাঝে। সেই জীবনটাও আসলে উপভোগ করা দরকার। সেই চিন্তাটাই সবার আগে করা উচিত বলে আমি মনে করি। 🙂\n ব্লগটা ভিডিও আকারে দেখতে চাইলেঃ https://youtu.be/m5teFFW2cbI\n","permalink":"https://aniskhan001.me/life/%E0%A6%9C%E0%A6%AC-%E0%A6%A8%E0%A6%BF%E0%A6%AF%E0%A6%BC%E0%A7%87-%E0%A6%95%E0%A6%BF%E0%A6%AD%E0%A6%BE%E0%A6%AC%E0%A7%87-%E0%A6%AC%E0%A6%BF%E0%A6%A6%E0%A7%87%E0%A6%B6%E0%A7%87-%E0%A6%AF%E0%A6%BE%E0%A6%93%E0%A6%AF%E0%A6%BC%E0%A6%BE-%E0%A6%AF%E0%A6%BE%E0%A6%AF%E0%A6%BC-%E0%A6%AA%E0%A6%B0%E0%A7%8D%E0%A6%AC-%E0%A7%A6/","summary":"ইদানীং একটা প্রশ্ন প্রায়ই আসে… কিভাবে জব নিয়ে বিদেশে যাওয়া যায়?\nআমি সম্প্রতি একটা চাকরী নিয়ে জার্মানিতে আসি। ট্রিভাগো নামে একটা কোম্পানিতে সফটওয়্যার ইঞ্জিনিয়ার হিসেবে জয়েন করেছি। গত কয়েক মাসে পরিচিত অনেকেই বাংলাদেশ থেকে জব নিয়ে বিদেশে গিয়েছেন। আগের অফিসের কয়েকজন পরিচিতি কলিগ জার্মানি এসেছেন। কিছুদিন আগে আরেক বন্ধু নেদারল্যান্ড আসল। এক বড় ভাই জাপান যাচ্ছেন। আরেক বড় ভাই পরিবার নিয়ে সাউথ কোরিয়াতে গেল কয়দিন আগে। ইদানীং চাকরী নিয়ে বিদেশ যাওয়ার একটা ট্রেন্ড দেখা যাচ্ছে দেশে। আমি জার্মানি আসার পর পরিচিত অনেকেই জানতে চেয়েছেন কিভাবে জব নিয়ে বিদেশে আসা যায়। ফেসবুকে অনেক প্রশ্ন পেয়েছি এ ব্যাপারে। সবাইকে একই প্রশ্নের উত্তর বার বার দেয়া সময় সাপেক্ষ। তাই ভাবলাম, একটা ব্লগ/ভ্লগ করি, যেখানে কমন সব প্রশ্নের উত্তর আর আমার অভিজ্ঞতা শেয়ার করা যাবে।","title":"জব নিয়ে কিভাবে বিদেশে যাওয়া যায়?"},{"content":"Motivation For a small Kubernetes cluster, I needed a minimal dashboard where logs from all the running applications in the Kubernetes environment can be viewed or grepped from one place.\nI thought about ELK (Elastic + Logstash + Kibana) first, but then I realized my small cluster has a config of only 2 nodes with a total 2 vCPU and 4GB RAM, which wouldn’t be a wise option for Elastic to run since it requires more resources to run smoothly. I wanted to use as few resources as possible to have the logging architecture setup.\nLet’s see if the FIG ➡ (FluentBit + InfluxDB + Grafana) stack can do for us!\n The FIG logging architecture in Kubernetes\n  The High-Level Architecture   Fluent Bit used as the log processor which will collect all the stdout from all the pods in Kubernetes and forward them to a data storage. Fluent Bit** **is a part of the Fluentd Ecosystem but uses much much fewer resources. It creates a tiny little footprint on your system’s memory. In the Kubernetes environment, it is installed as a DaemonSet resource.\n  InfluxDB will be used as data storage so that it can hold the data forwarded by Fluent Bit. InfluxDB is a popular time-series database designed to handle high write and query loads. Since we will store lots of application logs in real-time, I think Influx is a very good option here.\n  Grafana will provide supports to create dashboards and panels where we can query over the data from InfluxDB.\n  Preparing the cluster We will be using Helm to package and deploy required applications and dependencies into the cluster. Official Helm charts for both Fluent Bit, InfluxDB and Grafana are available on GitHub or Helm Hub.\nThe default settings and config values provided by Helm charts won’t work out of the box for us. So I made a GitHub repository that contains the official Fluent Bit charts, InfluxDB charts, Grafana charts, and a few config adjustments over those. We will be using this directory to deploy all of our apps. Don’t worry I will explain below which configs were adjusted to have our FIG stack!\n😉 Pro tip: Try to use Helm 3 as it doesn’t install tiller in your cluster. But if version 2 of Helm is an absolute necessity, look at the Tillerless Helm plugin. You can read more here about why the tiller should not be installed in a cluster.\nDeploy the FIG stack To keep our deployments separated from other running applications in Kubernetes, let’s create a namespace called ‘monitoring’ or a fancy name of your choice.\nkubectl create ns monitoring Since we will be using our GitHub repo, let’s clone this to the local machine.\ngit clone https://github.com/aniskhan001/fig-stack cd fig-stack 1. Deploy \u0026amp; Configure InfluxDB helm upgrade --install influxdb influxdb -n monitoring There are not many configurations needed for InfluxDB, but the credentials and DB name. We will need to create a database to store the logs forwarded by Fluent Bit. In the influxdb/values.yml file, we provide the DB name using an env variable:\nenv: - name: INFLUXDB_DB value: \u0026#34;fluentbit\u0026#34; That’s it. We are done with InfluxDB! You can continue to step 2.\nNote: we are not creating a username and password for this demo. However, in a production environment, we should always create a username and password to ensure DB security.\nTo have authentication, in the influxdb/values.yml file set these values:\nsetDefaultUser.enabled: true setDefaultUser.user.username: my_user setDefaultUser.user.password: my_pass If the value of setDefaultUser.user.password is not given it will generate a random password for us and store it as a Kubernetes secret resource.\nAlso, the persistence is disabled for this demo so that we don’t create a pvc for this. The data won’t persist if the InfluxDB instance fails at some point.\npersistence.enabled: false Don’t forget to enable persistence in a production environment.\n2. Deploy \u0026amp; Configure Fluent Bit helm upgrade --install fluent-bit fluent-bit -n monitoring The configuration here for Fluent Bit is mainly to tell it to use InfluxDB as the backend. In fluent-bit/values.yml we define it in the ‘backend’ section\nbackend: type: influx influx: host: influxdb port: 8086 database: fluentbit sequence_tag: _seq Then we will need to configure the InfluxDB output plugin in Fluent Bit’s configuration. In the fluent-bit/templates/config.yml file:\ndata: fluent-bit-service.conf: |... ... [OUTPUT] Name influxdb Match * Host {{ .Values.backend.influx.host }} Port {{ .Values.backend.influx.port }} Database {{ .Values.backend.influx.database }} Sequence_Tag {{ .Values.backend.influx.sequence_tag }} 3. Deploy \u0026amp; Configure Grafana helm upgrade --install grafana grafana -n monitoring After Grafana is installed, let’s port-forward the instance to the local machine to continue for additional settings.\n# get the grafana pod name export GF_POD_NAME=$(kubectl get pod -n monitoring -l app=grafana -o jsonpath=\u0026#34;{.items[0].metadata.name}\u0026#34;) # port forward kubectl -n monitoring port-forward $GF_POD_NAME 3000 Go to: http://localhost:3000/login\nLogin with: user = admin \u0026amp; pass = badmin\nCause I have set the values of adminPassword in grafana/values.yml for this quick demo! 😬 This is not recommended. You can set a default password here, or just leave it blank to let Helm create a random password during installation.\nThen head over to http://localhost:3000/datasources/new to add InfluxDB as a new data source and confirm these below settings:\nURL: http://influxdb:8086/ Access: Server (Default) Database: fluentbit Pressing the “Save \u0026amp; Test” button should save the data source.\nAnd thus we are ready to run our queries!\nExample query and dashboard  select everything (*) from a measurement in InfluxDB\n  Using InfluxQL, you can query and grep only the things that are meaningful to your needs. The Influx Query Language is a lot similar to MySQL or other SQL queries.\n Show all logs from a particular container\n  That’s a quick setup walkthrough for a lesser-known FIG stack. Initially, I needed a minimal logging setup for viewing application logs and dived into it. While it does serve my purpose; but now, I think this setup can be used to monitor lots of things using the powerful Influx Query Language. For that, the applications should provide meaningful logs to the system.\nI hope you enjoyed the walkthrough. Please let me know any questions or suggestions if you have. Also, don’t forget to create issues or send PR to the repo if things need correction and/or enhancement. I’ll be happy to review and add things if necessary.\nResources   The codebase for deployment: https://github.com/aniskhan001/fig-stack\n  Fluent Bit output plugin config: https://docs.fluentbit.io/manual/v/1.3/output/influxdb\n  Learn the InfluxDB configuration: https://docs.influxdata.com/influxdb/v1.7/administration/config/\n  How InfluxSQL works: https://docs.influxdata.com/influxdb/v1.7/query_language/spec/\n  ","permalink":"https://aniskhan001.me/tech/logging-with-fluent-bit-influxdb-fig/","summary":"Motivation For a small Kubernetes cluster, I needed a minimal dashboard where logs from all the running applications in the Kubernetes environment can be viewed or grepped from one place.\nI thought about ELK (Elastic + Logstash + Kibana) first, but then I realized my small cluster has a config of only 2 nodes with a total 2 vCPU and 4GB RAM, which wouldn’t be a wise option for Elastic to run since it requires more resources to run smoothly.","title":"Logging with Fluent Bit \u0026 InfluxDB"},{"content":"Motivation 🌌 🌠 Recently I worked on a MeteorJS project. The live version of the app is hosted on Galaxy and there was no staging environment for this one. So we needed to deploy another instance of this app in a staging environment. The codebase was hosted on GitLab and we have a shared cluster of MongoDB in mLab. While we wanted to run the staging environment efficiently, we also wanted to make sure the deployment is as cost-effective as we can.\nFinding 🆓 options While searching for free options, I have found these best possible options:\n Heroku is one of the most used PaaS currently which supports deploying app automatically from the GitHub repository. However, deploying from other code repositories like GitLab, Bitbucket etc aren’t supported yet.\nAt the time of this writing, they support 4 different deployment methods:\nThese are: Heroku repo (GIT), GitHub, Dropbox, and Container Registry   Heroku Deployment Methods\n   We would also need a runner for the CD to run the job that checks the successful build of the codebase. GitLab provides shared runners for one repository for free!  How I won the scenario? 🏆 Ever wished for a deploy button? Pressing that would be fun!\n the glorious deploy button\n  But in our system, we don’t even need that button to press. Here’s how:\n1. Set up Heroku API Key First, we will need an app on Heroku. If you don’t have an app yet, create one. The app name will be needed later.\nThen, we will need to set up the API key so that it can connect to the runner.\n Go to dashboard.heroku.com/account to get the Heroku API Key. Place the Heroku API Key under Settings ➔ CI / CD ➔ Variables   GitLab CI/CD Settings\n  We saved the key in a variable named HEROKU_API_KEY, we will use it later.\n2. Write the GitLab deployment script Now it’s time to write the .gitlab-ci.yml file. My deployment script goes like this:\nstaging: type: deploy script: - apt-get update -qy - apt-get install -y ruby-dev - gem install dpl - dpl --provider=heroku --app=my_app --api-key=$HEROKU_API_KEY only: - master As we can see, in the script section of the above snippet, we are installing ruby and a ruby gem called dpl. It’s a deploy tool made by Travis and can be used in GitLab as well. Then we are passing:\n provider name as heroku --provider=heroku the app name of our heroku app --app=my_app the api-key --api-key=$HEROKU_API_KEY which we have saved earlier  Finally we are defining which branch changes should trigger the deployment.\n3. Setup GitLab Runner To run the pipeline we will need to install a runner (machine) which will run scripts and other programs to make sure our app is building successfully.\nThis doc explains how we can install the runner either on our local machine or in Docker: docs.gitlab.com/runner/install\n4. Install Buildpack on Heroku (optional) for Meteor app I’d recommend using the Meteor Buildpack Horse for Meteor app with Heroku which provides easy configuration to start the app. All we need to do is to define the ROOT_URL and MONGO_URL.\n Heroku buildpack settings\n  And need to place the URL of this buildpack to Heroku, of course! Other available environment vars can be found here: github.com/AdmitHub/meteor-buildpack-horse#environment\nI hope this short guide is helpful for beginners. Experts, please let me know suggestions and/or room for improvements if there’s any. Cheers!\n","permalink":"https://aniskhan001.me/tech/easy-continuous-delivery-for-meteor-app-with-gitlab-heroku/","summary":"Motivation 🌌 🌠 Recently I worked on a MeteorJS project. The live version of the app is hosted on Galaxy and there was no staging environment for this one. So we needed to deploy another instance of this app in a staging environment. The codebase was hosted on GitLab and we have a shared cluster of MongoDB in mLab. While we wanted to run the staging environment efficiently, we also wanted to make sure the deployment is as cost-effective as we can.","title":"Easy Continuous Delivery for Meteor app with GitLab + Heroku"},{"content":"December 2017, at work, I had to deploy a micro-service very very quickly to support the core service of ours. The framework I used for this one was Sanic, (a micro-framework written in Python 3.5 with Async support). So, I get the python image first along with dependencies in a requirements.txt file. This is how it went:\nFROMpython:3.6ENV PYTHONUNBUFFERED 1ENV TZ=Asia/DhakaRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \u0026amp;\u0026amp; echo $TZ \u0026gt; /etc/timezoneRUN mkdir /appADD requirements.txt ./app/WORKDIR/appRUN pip install -r requirements.txtCOPY ./code ./appEXPOSE5000After building this Dockerfile, the size of the image was 780 MB!\nSince I was in a hurry, (translation: I actually didn’t have good optimization knowledge in Docker, LOL) I just stared on that monstrous size for a small service and let it pass on to production. Then when I got time recently to think about optimization, gathered some knowledge from online and rewrote the file to this:\nFROMalpine:3.7RUN mkdir /appWORKDIR/appCOPY requirements.txt ./RUN apk add --no-cache python3 python3-dev build-base \u0026amp;\u0026amp; \\  python3 -m ensurepip \u0026amp;\u0026amp; \\  rm -r /usr/lib/python*/ensurepip \u0026amp;\u0026amp; \\  pip3 install --upgrade pip setuptools \u0026amp;\u0026amp; \\  pip3 install -r requirements.txt \u0026amp;\u0026amp; \\  apk del python3-dev build-base \u0026amp;\u0026amp; \\  rm -r /root/.cacheENV PYTHONUNBUFFERED 1ENV TZ=Asia/DhakaRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \u0026amp;\u0026amp; echo $TZ \u0026gt; /etc/timezoneCOPY ./code ./CMD [\u0026#34;python3\u0026#34;, \u0026#34;app.py\u0026#34;]EXPOSE5000This one looks messy, but far more optimized. After building the image with this new Dockerfile it is only 79 MB now!\nSo this is how I reduced the image size First of all, we were getting a standard python image with lots of pre-installed tools which we might not require. Instead, I’m getting an alpine based image for the second example and installing only things which are required to run this particular app.\n(extra read: is alpine worth it?)\n# nope, nope, nopeFROMpython:3.6# yeah!FROMalpine:3.7Then in the next section, notice I’m running multiple statements at once to have fewer layers. Separate RUN commands create separate layers to an image which can potentially increase the size.\n# Multiple RUN at once, for glory!RUN apk add --no-cache python3 python3-dev build-base \u0026amp;\u0026amp; \\  python3 -m ensurepip \u0026amp;\u0026amp; \\  rm -r /usr/lib/python*/ensurepip \u0026amp;\u0026amp; \\  pip3 install --upgrade pip setuptools \u0026amp;\u0026amp; \\  pip3 install -r requirements.txt \u0026amp;\u0026amp; \\  apk del python3-dev build-base \u0026amp;\u0026amp; \\  rm -r /root/.cacheBut there’s a drawback to this method as well. Once we change something to this RUN command, a rebuild would take more time since it won’t be able to take its state from the previous layer. But once again, we generally don’t add or remove packages often, so I guess this is admissible.\nLast but not least, it’s always better to clean up rm -r files and directories which aren’t required by the app. Also, be sure to add unnecessary files and directories inside .dockerignore as well so that it won’t go inside the image.\nWhy does it matter?  Less image size means less bandwidth cost. Imagine a CD pipeline that does frequent deployments where it can save more server costs Less room for security breach since we have fewer tools and dependency packages inside the image to explore Faster deployments (obviously) with small-sized image   To readers, I’m continuously learning Docker through working with it, and I found this might be an interesting story to share with everyone. Let me know your thoughts on this and share if you have any suggestions or any more tip to make Dockerfile even more optimized. Thanks for reading my story!\n","permalink":"https://aniskhan001.me/tech/how-i-reduced-the-size-of-a-docker-image/","summary":"December 2017, at work, I had to deploy a micro-service very very quickly to support the core service of ours. The framework I used for this one was Sanic, (a micro-framework written in Python 3.5 with Async support). So, I get the python image first along with dependencies in a requirements.txt file. This is how it went:\nFROMpython:3.6ENV PYTHONUNBUFFERED 1ENV TZ=Asia/DhakaRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \u0026amp;\u0026amp; echo $TZ \u0026gt; /etc/timezoneRUN mkdir /appADD requirements.","title":"How I reduced the size of a Docker image"}]